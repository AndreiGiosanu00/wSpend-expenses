{"version":3,"sources":["webpack:///./src/app/components/pages/login/login.component.html","webpack:///./src/app/components/pages/login/login.component.scss","webpack:///./src/app/components/pages/login/login.component.ts","webpack:///./src/app/components/pages/login/login.module.ts"],"names":[],"mappings":"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","file":"pages-login-login-module.js","sourcesContent":["module.exports = \"<div fxLayout=\\\"column\\\" fxFlexFill fxLayoutAlign=\\\"center center\\\" style=\\\"background-image:url('../../../../assets/login11.jpg');\\nheight: 100%;\\nbackground-repeat: no-repeat;\\nbackground-position: center;\\nbackground-size: cover; \\\">\\n    <div fxLayout=\\\"column\\\" >\\n        <div *ngIf=\\\"alertsService.dangerAlert.active\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\" role=\\\"alert\\\" style=\\\"margin-top: 15px; margin-bottom: 5px;\\\">\\n            {{alertsService.dangerAlert.text}}\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\" (click)=\\\"closeDangerAlert()\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div *ngIf=\\\"activeStep == 1\\\" class=\\\" mat-elevation-z4\\\">\\n            <mat-card style=\\\"width: 550px;\\\">\\n                <mat-card-title>wSpend - Login\\n                    <a class=\\\"redirect\\\" [routerLink]=\\\"['/register']\\\" style=\\\"margin-left: 200px;\\\">Register an account</a>\\n                </mat-card-title>\\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"login()\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                          <input type=\\\"text\\\" id=\\\"username\\\" class=\\\"input\\\" placeholder=\\\"Please enter your username\\\"\\n                                 formControlName=\\\"username\\\" required matInput>\\n                        </mat-form-field>\\n                        <div *ngIf=\\\"formErrors.username\\\" class=\\\"help is-danger\\\">\\n                            {{ formErrors.username }}\\n                        </div>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"input\\\" placeholder=\\\"Please  enter your password\\\"\\n                            formControlName=\\\"password\\\" required matInput>\\n                        </mat-form-field>\\n                        <div *ngIf=\\\"formErrors.password\\\" class=\\\"help is-danger\\\">\\n                            {{ formErrors.password }}\\n                        </div>\\n                        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!userForm.valid\\\" (click)=\\\"login()\\\">log in</button>\\n                    </form>\\n                </mat-card-content>\\n            </mat-card>\\n        </div>\\n\\n        <div *ngIf=\\\"activeStep == 2\\\" class=\\\" mat-elevation-z4\\\">\\n            <mat-card style=\\\"width: 550px;\\\">\\n                <mat-card-title>wSpend - Login (Code verification)\\n                </mat-card-title>\\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"login()\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input type=\\\"text\\\" id=\\\"code\\\" class=\\\"input\\\" placeholder=\\\"Please enter the code received by SMS\\\"\\n                                   required matInput>\\n                        </mat-form-field>\\n                        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!userForm.valid\\\" (click)=\\\"login()\\\">log in</button>\\n                    </form>\\n                </mat-card-content>\\n            </mat-card>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \".sigin-conainer {\\n  min-height: 100%;\\n  background-size: cover;\\n  padding: 100px; }\\n\\n.sigin-main {\\n  position: relative;\\n  margin: 0 auto;\\n  width: 500px; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n.redirect {\\n  font-size: 14px;\\n  margin-left: 10px;\\n  color: #00AAAA; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport {AuthService} from \"../../../services/auth.service\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {AlertsService} from \"../../../services/alerts.service\";\n\ndeclare let $: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  activeStep = 1;\n  userForm: FormGroup;\n  formErrors = {\n    'username': '',\n    'password': ''\n  };\n  validationMessages = {\n    'username': {\n      'required': 'Please enter your username',\n    },\n    'password': {\n      'required': 'Please enter your password',\n      'pattern': 'The password must contain numbers and letters',\n      'minlength': 'Please enter more than 4 characters',\n      'maxlength': 'Please enter less than 25 characters',\n    }\n  };\n\n  constructor(private router: Router,\n              private fb: FormBuilder,\n              private authService: AuthService,\n              private http: HttpClient,\n              private alertsService: AlertsService) {\n  }\n\n  ngOnInit() {\n    $('body').css('overflow', 'hidden');\n    this.buildForm();\n  }\n\n  buildForm() {\n    this.userForm = this.fb.group({\n      'username': ['', [\n        Validators.required,\n      ]\n      ],\n      'password': ['', [\n        Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\n        Validators.minLength(6),\n        Validators.maxLength(25)\n      ]\n      ],\n    });\n\n    this.userForm.valueChanges.subscribe(data => this.onValueChanged(data));\n    this.onValueChanged();\n  }\n\n  onValueChanged(data?: any) {\n    if (!this.userForm) {\n      return;\n    }\n    const form = this.userForm;\n    for (const field in this.formErrors) {\n      if (Object.prototype.hasOwnProperty.call(this.formErrors, field)) {\n        this.formErrors[field] = '';\n        const control = form.get(field);\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if (Object.prototype.hasOwnProperty.call(control.errors, key)) {\n              this.formErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n\n  login() {\n    const user = {\n      username: this.userForm.value.username,\n      password: this.userForm.value.password\n    };\n\n    if (this.activeStep == 2) {\n      let code = $('#code').val();\n      this.authService.checkSMSCode(code).subscribe((response: any) => {\n        if (response.success) {\n          this.router.navigateByUrl('/auth/dashboard');\n        } else {\n          this.alertsService.dangerAlert = {\n            active: true,\n            text: response.msg\n          };\n          localStorage.clear();\n          this.router.navigateByUrl('/login');\n        }\n      });\n    }\n\n    if (this.activeStep == 1) {\n      this.authService.authenticateUser(user).subscribe((response: any) => {\n        if (response.success) {\n          this.authService.storeUserData(response.token, response.user);\n          user['phone'] = response.user.phone;\n          this.authService.sendSMS(user).subscribe((res: any) => {\n            if (!res.success) {\n              this.alertsService.dangerAlert = {\n                active: true,\n                text: response.msg\n              };\n            }\n          });\n        } else {\n          this.alertsService.dangerAlert = {\n            active: true,\n            text: response.msg\n          };\n          this.router.navigateByUrl('/login');\n          this.activeStep = 1;\n        }\n      });\n      this.activeStep ++;\n    }\n\n\n\n  }\n\n  closeDangerAlert() {\n    this.alertsService.dangerAlert.active = false;\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { LoginComponent } from './login.component';\nimport { \n        MatCardModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatInputModule,\n        MatToolbarModule\n       } from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\n\nconst routes: Routes = [\n    {path: '', component: LoginComponent},\n  ];\n@NgModule({\n    imports: [\n        MatCardModule,\n        CommonModule,\n        FlexLayoutModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatInputModule,\n        MatToolbarModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [   \n        LoginComponent,\n    ],\n    exports: [\n        RouterModule\n    ],\n    providers: [\n    ]\n})\nexport class LoginModule {\n}\n"],"sourceRoot":""}