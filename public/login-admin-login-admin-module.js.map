{"version":3,"sources":["webpack:///./src/app/components/login-admin/login-admin.component.html","webpack:///./src/app/components/login-admin/login-admin.component.scss","webpack:///./src/app/components/login-admin/login-admin.component.ts","webpack:///./src/app/components/login-admin/login-admin.module.ts"],"names":[],"mappings":"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","file":"login-admin-login-admin-module.js","sourcesContent":["module.exports = \"<div fxLayout=\\\"column\\\" fxFlexFill fxLayoutAlign=\\\"center center\\\" style=\\\"background-image:url('../../../../assets/login11.jpg');\\nheight: 100%;\\nbackground-repeat: no-repeat;\\nbackground-position: center;\\nbackground-size: cover; \\\">\\n  <div fxLayout=\\\"column\\\" >\\n    <div *ngIf=\\\"alertsService.dangerAlert.active\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\" role=\\\"alert\\\" style=\\\"margin-top: 15px; margin-bottom: 5px;\\\">\\n      {{alertsService.dangerAlert.text}}\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\" (click)=\\\"closeDangerAlert()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\" mat-elevation-z4\\\">\\n      <mat-card style=\\\"width: 550px;\\\">\\n        <mat-card-title>wSpend - Admin Login\\n        </mat-card-title>\\n        <mat-card-content>\\n          <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"login()\\\">\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input type=\\\"text\\\" id=\\\"username\\\" class=\\\"input\\\" placeholder=\\\"Please enter your username\\\"\\n                     formControlName=\\\"username\\\" required matInput>\\n            </mat-form-field>\\n            <div *ngIf=\\\"formErrors.username\\\" class=\\\"help is-danger\\\">\\n              {{ formErrors.username }}\\n            </div>\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"input\\\" placeholder=\\\"Please  enter your password\\\"\\n                     formControlName=\\\"password\\\" required matInput>\\n            </mat-form-field>\\n            <div *ngIf=\\\"formErrors.password\\\" class=\\\"help is-danger\\\">\\n              {{ formErrors.password }}\\n            </div>\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!userForm.valid\\\" (click)=\\\"login()\\\">log in</button>\\n          </form>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport {HttpClient} from \"@angular/common/http\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {AlertsService} from \"../../services/alerts.service\";\n\ndeclare let $: any;\n\n@Component({\n  selector: 'app-login-admin',\n  templateUrl: './login-admin.component.html',\n  styleUrls: ['./login-admin.component.scss']\n})\nexport class LoginAdminComponent implements OnInit {\n\n  userForm: FormGroup;\n  formErrors = {\n    'username': '',\n    'password': ''\n  };\n  validationMessages = {\n    'username': {\n      'required': 'Please enter your username',\n    },\n    'password': {\n      'required': 'Please enter your password',\n      'pattern': 'The password must contain numbers and letters',\n      'minlength': 'Please enter more than 4 characters',\n      'maxlength': 'Please enter less than 25 characters',\n    }\n  };\n\n  constructor(private router: Router,\n              private fb: FormBuilder,\n              private authService: AuthService,\n              private http: HttpClient,\n              private alertsService: AlertsService) {\n  }\n\n  ngOnInit() {\n    $('body').css('overflow', 'hidden');\n    this.buildForm();\n  }\n\n  buildForm() {\n    this.userForm = this.fb.group({\n      'username': ['', [\n        Validators.required,\n      ]\n      ],\n      'password': ['', [\n        Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\n        Validators.minLength(6),\n        Validators.maxLength(25)\n      ]\n      ],\n    });\n\n    this.userForm.valueChanges.subscribe(data => this.onValueChanged(data));\n    this.onValueChanged();\n  }\n\n  onValueChanged(data?: any) {\n    if (!this.userForm) {\n      return;\n    }\n    const form = this.userForm;\n    for (const field in this.formErrors) {\n      if (Object.prototype.hasOwnProperty.call(this.formErrors, field)) {\n        this.formErrors[field] = '';\n        const control = form.get(field);\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if (Object.prototype.hasOwnProperty.call(control.errors, key)) {\n              this.formErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n\n  login() {\n    const user = {\n      username: this.userForm.value.username,\n      password: this.userForm.value.password\n    };\n\n    this.authService.loginAdmin(user).subscribe((response: any) => {\n      if (response.success) {\n        response.user.role = 'admin';\n        localStorage.setItem('admin', JSON.stringify({logged: true}));\n        this.authService.storeUserData(response.token, response.user);\n        // this.flashMessages.show('You have successfully login!', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigateByUrl('/auth/admin');\n      } else {\n        this.alertsService.dangerAlert = {\n          active: true,\n          text: response.msg\n        };\n        // this.flashMessages.show(response.msg, {cssClass: 'alert-danger', timeout: 5000});\n        this.router.navigateByUrl('/admin/login');\n      }\n    });\n\n  }\n\n  closeDangerAlert() {\n    this.alertsService.dangerAlert.active = false;\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport {\n    MatCardModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatInputModule,\n    MatToolbarModule\n} from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\nimport {LoginAdminComponent} from \"./login-admin.component\";\nimport {AuthService} from \"../../services/auth.service\";\n\nconst routes: Routes = [\n    {path: '', component: LoginAdminComponent},\n];\n@NgModule({\n    imports: [\n        MatCardModule,\n        CommonModule,\n        FlexLayoutModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatInputModule,\n        MatToolbarModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        LoginAdminComponent,\n    ],\n    exports: [\n        RouterModule\n    ],\n    providers: [\n        AuthService\n    ]\n})\nexport class LoginAdminModule {\n}\n"],"sourceRoot":""}