{"version":3,"sources":["webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.scss","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/register/register.module.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["module.exports = \"<div fxLayout=\\\"column\\\" fxFlexFill fxLayoutAlign=\\\"center center\\\" style=\\\"background-image:url('../../../../assets/login11.jpg');\\nheight: 100%;\\nbackground-repeat: no-repeat;\\nbackground-position: center;\\nbackground-size: cover; \\\">\\n  <div fxLayout=\\\"column\\\" >\\n\\n    <div class=\\\" mat-elevation-z4\\\">\\n      <mat-card style=\\\"width: 550px;\\\">\\n        <mat-card-title>wSpend - Register\\n        </mat-card-title>\\n        <mat-card-content>\\n          <ng-container *ngIf=\\\"activeStep == 1\\\">\\n            <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" [formGroup]=\\\"userForm\\\">\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"input\\\" placeholder=\\\"Please enter your name\\\"\\n                       formControlName=\\\"name\\\" required matInput>\\n              </mat-form-field>\\n              <div *ngIf=\\\"formErrors.name\\\" class=\\\"help is-danger\\\">\\n                {{ formErrors.name }}\\n              </div>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input type=\\\"text\\\" id=\\\"username\\\" class=\\\"input\\\" placeholder=\\\"Please enter your username\\\"\\n                       formControlName=\\\"username\\\" required matInput>\\n              </mat-form-field>\\n              <div *ngIf=\\\"formErrors.username\\\" class=\\\"help is-danger\\\">\\n                {{ formErrors.username }}\\n              </div>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input type=\\\"email\\\" id=\\\"email\\\" class=\\\"input\\\" placeholder=\\\"Please enter your email\\\"\\n                       formControlName=\\\"email\\\" required matInput>\\n              </mat-form-field>\\n              <div *ngIf=\\\"formErrors.email\\\" class=\\\"help is-danger\\\">\\n                {{ formErrors.email }}\\n              </div>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"input\\\" placeholder=\\\"please  enter your password\\\"\\n                       formControlName=\\\"password\\\" required matInput>\\n              </mat-form-field>\\n              <div *ngIf=\\\"formErrors.password\\\" class=\\\"help is-danger\\\">\\n                {{ formErrors.password }}\\n              </div>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input type=\\\"text\\\" id=\\\"phone\\\" class=\\\"input\\\" placeholder=\\\"Please enter your phone number\\\"\\n                       formControlName=\\\"phone\\\" required matInput>\\n              </mat-form-field>\\n              <div *ngIf=\\\"formErrors.phone\\\" class=\\\"help is-danger\\\">\\n                {{ formErrors.phone }}\\n              </div>\\n              <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!userForm.valid\\\" (click)=\\\"register()\\\">register</button>\\n            </form>\\n          </ng-container>\\n\\n          <ng-container *ngIf=\\\"activeStep == 2\\\">\\n            <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" [formGroup]=\\\"codeForm\\\">\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input type=\\\"text\\\" id=\\\"code\\\" class=\\\"input\\\" placeholder=\\\"Please enter the code received via SMS\\\"\\n                     formControlName=\\\"code\\\" required matInput>\\n            </mat-form-field>\\n            <div *ngIf=\\\"formErrors.code\\\" class=\\\"help is-danger\\\">\\n              {{ formErrors.code }}\\n            </div>\\n              <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!codeForm.valid\\\" (click)=\\\"register()\\\">register</button>\\n            </form>\\n          </ng-container>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {ValidateService} from \"../../services/validate.service\";\n\ndeclare let $: any;\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  activeStep = 1;\n  userForm: FormGroup;\n  codeForm: FormGroup;\n  formErrors = {\n    'name': '',\n    'username': '',\n    'email': '',\n    'password': '',\n    'phone': '',\n    'code': ''\n  };\n  validationMessages = {\n    'name': {\n      'required': 'Please enter your name',\n    },\n    'username': {\n      'required': 'Please enter your username',\n    },\n    'email': {\n      'required': 'Please enter your email',\n      'email': 'Please enter a valid email'\n    },\n    'password': {\n      'required': 'Please enter your password',\n      'pattern': 'The password must contain numbers and letters',\n      'minlength': 'Please enter more than 4 characters',\n      'maxlength': 'Please enter less than 25 characters',\n    },\n    'phone': {\n      'required': 'Please enter your phone number',\n      'pattern': 'Please enter a valid phone number',\n      'minlength': 'Please enter a valid phone number',\n      'maxlength': 'Please enter a valid phone number',\n    },\n    'code': {\n      'required': 'Please enter the code received via SMS',\n    },\n  };\n\n  constructor(private router: Router,\n              private fb: FormBuilder,\n              private authService: AuthService,\n              private http: HttpClient,\n              private validateService: ValidateService) { }\n\n  ngOnInit() {\n    $('body').css('overflow', 'hidden');\n    this.buildForm();\n  }\n\n  buildForm() {\n    this.userForm = this.fb.group({\n      'name': ['', [\n        Validators.required,\n      ]\n      ],\n      'username': ['', [\n        Validators.required,\n      ]\n      ],\n      'email': ['', [\n        Validators.required,\n        Validators.email\n      ]\n      ],\n      'password': ['', [\n        Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\n        Validators.minLength(6),\n        Validators.maxLength(25)\n      ]\n      ],\n      'phone': ['', [\n        Validators.required,\n        Validators.minLength(10),\n        Validators.maxLength(10),\n        Validators.pattern('^\\\\d+$')\n      ]\n      ],\n    });\n\n    this.codeForm = this.fb.group({\n      'code': ['', [\n        Validators.required,\n      ]\n      ]});\n\n    this.userForm.valueChanges.subscribe(data => this.onValueChanged(data));\n    this.onValueChanged();\n  }\n\n  onValueChanged(data?: any) {\n    if (!this.userForm) {\n      return;\n    }\n    const form = this.userForm;\n    for (const field in this.formErrors) {\n      if (Object.prototype.hasOwnProperty.call(this.formErrors, field)) {\n        this.formErrors[field] = '';\n        const control = form.get(field);\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if (Object.prototype.hasOwnProperty.call(control.errors, key)) {\n              this.formErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n\n    const formCode = this.codeForm;\n    const field = this.formErrors.code;\n      if (Object.prototype.hasOwnProperty.call(this.formErrors, field)) {\n        this.formErrors[field] = '';\n        const control = formCode.get(field);\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if (Object.prototype.hasOwnProperty.call(control.errors, key)) {\n              this.formErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n\n  }\n\n  register() {\n\n    const user = {\n      name: this.userForm.value.name,\n      username: this.userForm.value.username,\n      email: this.userForm.value.email,\n      password: this.userForm.value.password,\n      phone: this.userForm.value.phone\n    };\n\n    // Validations\n\n    if (!this.validateService.validateRegister(user)) {\n      // this.flashMessages.show('Please fill in all fields.', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n    if (!this.validateService.validateEmail(user.email)) {\n      // this.flashMessages.show('Please use a valid email.', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n    // Register a new user\n    this.authService.registerUser(user).subscribe((response: any) => {\n        if (response.success) {\n          // this.flashMessages.show('You have registered successfully and you can login now', {cssClass: 'alert-success', timeout: 3000});\n          this.router.navigateByUrl('/login');\n        } else {\n          // this.flashMessages.show('Something went wrong. We will investigate ASAP.', {cssClass: 'alert-danger', timeout: 3000});\n        }\n      });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './register.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport {\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatInputModule,\n  MatToolbarModule\n} from \"@angular/material\";\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nconst routes: Routes = [\n    { path: '', component: RegisterComponent },\n]\n\n@NgModule({\n  imports: [\n    MatCardModule,\n    CommonModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatInputModule,\n    MatToolbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    RegisterComponent,\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: [\n  ]\n})\nexport class RegisterModule { }\n"],"sourceRoot":""}